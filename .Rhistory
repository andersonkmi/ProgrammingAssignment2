find.packages("devtools")
find.package("devtools")
install.packages("devtools")
library(devtools)
find_rtools()
find_rtools()
library(devtools)
library(devtools)
find_rtools()
install.package("KernSmooth")
install.packages("KernSmooth")
library(KernSmooth)
cube <- function(x, n) {}
cube <- function(x, n) { x^3}
cube(3)
x <- 1:10
if(x > 5) { x <- 0 }
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
x
y
?ls
ls
library(datasets)
data(mtcars)
with(mtcars, tapply(mpg, cyl, mean))
with(mtcars, tapply(hp, cyl, mean))
getwwd()
getwd()
packageVersion(swirl)
setwd("F:/GoogleDrive/Coursera/Data Science/Coursera/R Programming/Week3/Assignment/ProgrammingAssignment2")
source("cachematrix.R")
x = rbind(c(1, -1/4), c(-1/4, 1))
m = makeCacheMatrix(x)
m$getInvertedMatrix()
x
m$getInvertedMatrix()
m$get()
cacheSolve(m)
cacheSolve(m)
